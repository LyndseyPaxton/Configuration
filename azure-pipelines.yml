# Yaml Docs: https://aka.ms/yaml
name: $(Build.DefinitionName)_$(GitVersion_InformationalVersion)

pr: ["master"]

variables:
  ArtifactName: $(Build.DefinitionName)

resources:
  repositories:
    - repository: poshcode
      type: github
      endpoint: github # You'll need to define a service connection in your project on Azure
      name: PoshCode/Azure-Pipelines
      ref: refs/tags/3.2.0

stages:
- stage: Build
  jobs:
  - template: GitVersion-job.yml@poshcode
  - job: Build # using a custom build job because we have two modules
    pool:
      vmImage: windows-2019
    dependsOn: GitVersion
    variables:
      InformationalVersion: $[dependencies.GitVersion.outputs['GitVersion.InformationalVersion']]

    steps:
    - template: Install-RequiredModule-step.yml@poshcode

    - powershell: ./build.ps1 -OutputDirectory $(Build.BinariesDirectory)/$(Build.DefinitionName) -SemVer $(InformationalVersion) -Verbose
      displayName: 'Run build script'

    - task: PublishPipelineArtifact@1
      displayName: Publish Build Output
      inputs:
        artifactName: $(ArtifactName)
        targetPath: $(Build.BinariesDirectory)

- stage: Test
  dependsOn: Build
  jobs:
  - template: ScriptAnalyzer-job.yml@poshcode
    parameters:
      dependsOn: []
      artifactName: $(ArtifactName)
      excludeRules: ["PSShouldProcess","PSUseShouldProcessForStateChangingFunctions","PSAvoidUsingDeprecatedManifestFields","PSPossibleIncorrectUsageOfAssignmentOperator"]

  - template: Gherkin-job.yml@poshcode
    parameters:
      dependsOn: []
      artifactName: $(ArtifactName)
      specDirectory: '$(Build.SourcesDirectory)/Specs'
      strategy:
        matrix:
          Linux:
            vmImage: 'ubuntu-16.04'
          MacOS:
            vmImage: 'macOS-10.14'
          Windows:
            vmImage: 'windows-2019'
      pool:
        vmImage: $(vmImage)

